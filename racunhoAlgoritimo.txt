A = 2 + 3x + 4x^2 + 5x^3 + 6x^4 + 7x^5 + 8x^6 + 9x^7 + 10x^8 + 11x^9 + 12x^10 + 13x^11 + 14x^12 + 15x^13 + 16x^14 + 17x^15
B = 3 + 4x + 5x^2 + 6x^3 + 7x^4 + 8x^5 + 9x^6 + 10x^7 + 11x^8 + 12x^9 + 13x^10 + 14x^11 + 15x^12 + 16x^13 + 17x^14 + 18x^15

N = 16

A0 = 2 + 3x + 4x^2 + 5x^3 + 6x^4 + 7x^5 + 8x^6 + 9x^7
A1 = (10 + 11x + 12x^2 + 13x^3+ 14x^4 + 15x^5 + 16x^6 + 17x^7)*x^8

B0 = 3 + 4x + 5x^2 + 6x^3 + 7x^4 + 8x^5 + 9x^6 + 10x^7
B1 = (11 + 12x + 13x^1 + 14x^2 + 15x^3 + 16x^4 + 17x^5 + 18x^6)*x^8

function(n, a, b) = a X b = A0B0 + (A0B1)*x^N/2 + (A1B0)*x^N/2 + A1B1*x^N

produto de 2 vetores com tamanho n/2 retornam um vetor com tamanho 2*(n/2) - 1

A0B0 = function(n/2, a, b,);
A0B1 = function(n/2, a, b + sizeof(int) * n/2);
A1B0 = function(n/2, a + sizeof(int) * n/2, b);
A1B1 = function(n/2, a + sizeof(int) * n/s, b + sizeof(int) * n/2);

resp[0...n/2-1] = A0B0[0... 2*(n/2)-1]
resp[n/2...n-1] = A0B1[0...n/2 - 1] + A1B0[0...n/2 - 1]
resp[n...2n-1]  = A1B1[0...n/2 - 1]

A = 2 + 3x + 4x^2 + 5x^3 + 6x^4 + 7x^5 + 8x^6 + 9x^7
B = 9 + 8x + 7x^2 + 6x^3 + 5x^4 + 4x^5 + 3x^6 + 2x^7
